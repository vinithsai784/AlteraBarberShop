//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlteraBarberShop
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BarbersShopEntities : DbContext
    {
        public BarbersShopEntities()
            : base("name=BarbersShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<Audit> Audits { get; set; }
        public virtual DbSet<Facial> Facials { get; set; }
        public virtual DbSet<Status> Statuses { get; set; }
        public virtual DbSet<Style> Styles { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int AddFacials(string facial, Nullable<decimal> price)
        {
            var facialParameter = facial != null ?
                new ObjectParameter("Facial", facial) :
                new ObjectParameter("Facial", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFacials", facialParameter, priceParameter);
        }
    
        public virtual int AddHairStyles(string style, Nullable<decimal> price)
        {
            var styleParameter = style != null ?
                new ObjectParameter("Style", style) :
                new ObjectParameter("Style", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHairStyles", styleParameter, priceParameter);
        }
    
        public virtual int AddUser(string userName, string password, string firstName, string lastName, Nullable<long> contactNumber, string address, Nullable<System.DateTime> createdDateTime)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var contactNumberParameter = contactNumber.HasValue ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var createdDateTimeParameter = createdDateTime.HasValue ?
                new ObjectParameter("createdDateTime", createdDateTime) :
                new ObjectParameter("createdDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, contactNumberParameter, addressParameter, createdDateTimeParameter);
        }
    
        public virtual int AllAppointments(Nullable<System.DateTime> dateTime, Nullable<int> userID, Nullable<int> styleId, Nullable<int> facialID, Nullable<int> statusID)
        {
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var styleIdParameter = styleId.HasValue ?
                new ObjectParameter("StyleId", styleId) :
                new ObjectParameter("StyleId", typeof(int));
    
            var facialIDParameter = facialID.HasValue ?
                new ObjectParameter("FacialID", facialID) :
                new ObjectParameter("FacialID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AllAppointments", dateTimeParameter, userIDParameter, styleIdParameter, facialIDParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<AllFacials_Result> AllFacials()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllFacials_Result>("AllFacials");
        }
    
        public virtual int AppointmentInformation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppointmentInformation");
        }
    
        public virtual int DeleteAppointments(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAppointments", idParameter);
        }
    
        public virtual int DeleteFacials(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFacials", idParameter);
        }
    
        public virtual int DeleteHairStyles(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHairStyles", iDParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idParameter);
        }
    
        public virtual int DeleteUser1(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser1", idParameter);
        }
    
        public virtual int DeleteUsers(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUsers", userIdParameter);
        }
    
        public virtual ObjectResult<HairStyles_Result> HairStyles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HairStyles_Result>("HairStyles");
        }
    
        public virtual ObjectResult<Information_Result> Information()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Information_Result>("Information");
        }
    
        public virtual int InsertAppointment(Nullable<int> userId, Nullable<int> styleId, Nullable<int> facialId, Nullable<int> statusId, Nullable<System.DateTime> dateTime, string address)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var styleIdParameter = styleId.HasValue ?
                new ObjectParameter("StyleId", styleId) :
                new ObjectParameter("StyleId", typeof(int));
    
            var facialIdParameter = facialId.HasValue ?
                new ObjectParameter("FacialId", facialId) :
                new ObjectParameter("FacialId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAppointment", userIdParameter, styleIdParameter, facialIdParameter, statusIdParameter, dateTimeParameter, addressParameter);
        }
    
        public virtual int UpdateFacials(Nullable<int> id, string facial, Nullable<decimal> price)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var facialParameter = facial != null ?
                new ObjectParameter("Facial", facial) :
                new ObjectParameter("Facial", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFacials", idParameter, facialParameter, priceParameter);
        }
    
        public virtual int UpdateHairStyles(Nullable<int> id, string style, Nullable<decimal> price)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var styleParameter = style != null ?
                new ObjectParameter("Style", style) :
                new ObjectParameter("Style", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHairStyles", idParameter, styleParameter, priceParameter);
        }
    
        public virtual int UpdateUsers(Nullable<int> userId, string firstName, string lastName, Nullable<long> contactNumber, string address)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var contactNumberParameter = contactNumber.HasValue ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUsers", userIdParameter, firstNameParameter, lastNameParameter, contactNumberParameter, addressParameter);
        }
    
        public virtual int uspAddUser(string userName, string password, string firstName, string lastName, Nullable<long> contactNumber, string address)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var contactNumberParameter = contactNumber.HasValue ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(long));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUser", userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, contactNumberParameter, addressParameter);
        }
    }
}
